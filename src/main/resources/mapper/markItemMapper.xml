<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springboot.dao.MarkItemDao">
	
	<insert id="insertMarkItem" parameterType="MarkItem" keyProperty="id" useGeneratedKeys="true">
		insert into markItem values(null, #{date}, #{project.id}, #{user.id})
	</insert>
	
	<delete id="deleteMarkItem" parameterType="MarkItem">
		delete from markItem where id = #{id}
	</delete>
	
	<select id="findInfoMarkItem" parameterType="Map" resultMap="MarkItemMap">
		select m.id m_id, m.date m_date, m.userid m_userid, p.*, u.name u_name, t.name t_name, avg(i.score) as score from markitem m 
			left join markpipe i on i.markid = m.id
			left join project p on p.id = m.projectid
			left join users u on u.id = m.userid	
			left join users t on t.id = p.userid
		<where>
			<if test="id != null">
				and m.id = #{id}
			</if>
			<if test="project != null">
				and m.projectid = #{project.id}
			</if>
			<if test="company != null">
				and u.companyid = #{company.id}
			</if>
			<if test="user != null">
				and u.id = #{user.id}
			</if>
			<if test="temp != null">
				and t.id = #{temp.id}
			</if>
		</where>
		group by m.id order by m.id desc
	</select>
	
	<select id="findListMarkItem" parameterType="Map" resultMap="MarkItemMap">
		select m.id m_id, m.date m_date, m.userid m_userid, p.*, u.name u_name, t.name t_name, avg(i.score) as score from markitem m 
			left join markpipe i on i.markid = m.id
			left join project p on p.id = m.projectid
			left join users u on u.id = m.userid	
			left join users t on t.id = p.userid
		<where>
			<if test="name != null">
				and p.name like #{name}
			</if>
			<if test="project != null">
				and m.projectid = #{project.id}
			</if>
			<if test="company != null">
				and u.companyid = #{company.id}
			</if>
			<if test="user != null">
				and u.id = #{user.id}
			</if>
			<if test="temp != null">
				and t.id = #{temp.id}
			</if>
		</where>
		group by m.id order by m.id desc
	</select>
	
	<select id="findViewMarkItem" parameterType="Map" resultMap="MarkViewMap">
		select b.*, c.name c_name, count(a.id) count from markitem a
			right join project b on b.id = a.projectid and a.userid = #{user.id}
			left join users c on c.id = b.userid
		where b.state = '已提交'
		<if test="name != null">
			and b.name like #{name}
		</if>
		<if test="company != null">
			and c.companyid = #{company.id}
		</if>
		group by b.id order by b.id desc
	</select>
	
	<resultMap id="MarkViewMap" type="MarkItem">
		<id property="id" column="id"/>
		<result property="count" column="count"/>
		<association property="project" javaType="Project">
			<id property="id" column="id"/>
			<result property="name" column="name"/>
			<result property="operator" column="operator"/>
			<result property="datetime1" column="datetime1"/>
			<result property="datetime2" column="datetime2"/>
			<result property="content" column="content"/>
			<result property="state" column="state"/>
			<result property="date" column="date"/>
			<association property="user" javaType="User">
				<id property="id" column="userid"/>
				<result property="name" column="c_name"/>
			</association>
		</association>
	</resultMap>
	
	<resultMap id="MarkItemMap" type="MarkItem">
		<id property="id" column="m_id"/>
		<result property="score" column="score"/>
		<result property="date" column="m_date"/>
		<result property="user.name" column="u_name"/>
		<association property="project" javaType="Project">
			<id property="id" column="id"/>
			<result property="name" column="name"/>
			<result property="operator" column="operator"/>
			<result property="datetime1" column="datetime1"/>
			<result property="datetime2" column="datetime2"/>
			<result property="content" column="content"/>
			<result property="state" column="state"/>
			<result property="date" column="date"/>
		 	<result property="user.name" column="t_name"/>
		 </association>
	</resultMap>
	
</mapper>
 