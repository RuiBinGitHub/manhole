<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN" "http://mybatis.org/dtd/mybatis-3-mapper.dtd">

<mapper namespace="com.springboot.dao.ProjectDao">

    <insert id="insertProject" parameterType="Project" useGeneratedKeys="true" keyProperty="id">
        insert into project
        values (null, #{name}, #{operator}, #{datetime1}, #{datetime2}, #{content}, #{state}, #{path}, #{date}, #{user.id});
    </insert>

    <update id="updateProject" parameterType="Project">
        update project
        set name      = #{name},
            operator  = #{operator},
            datetime1 = #{datetime1},
            datetime2 = #{datetime2},
            content   = #{content},
            state     = #{state},
            path      = #{path}
        where id = #{id}
    </update>

    <delete id="deleteProject" parameterType="Project">
        delete
        from project
        where id = #{id}
    </delete>

    <select id="findInfoProject" parameterType="Map" resultMap="ProjectMap">
        select p.*, u.name u_name from project p left join users u on u.id = p.userid
        <where>
            <if test="id != null">
                and p.id = #{id}
            </if>
            <if test="user != null">
                and u.id = #{user.id}
            </if>
            <if test="company != null">
                and u.companyid = #{company.id}
            </if>
        </where>
    </select>

    <select id="findListProject" parameterType="Map" resultMap="ProjectMap">
        select p.*, u.name u_name from project p left join users u on u.id = p.userid
        <where>
            <if test="name != null">
                and p.name like #{name}
            </if>
            <if test="real != null">
                and p.name = #{real}
            </if>
            <if test="state != null">
                and p.state = #{state}
            </if>
            <if test="user != null">
                and u.id = #{user.id}
            </if>
            <if test="company != null">
                and u.companyid = #{company.id}
            </if>
        </where>
        order by p.date desc
    </select>

    <select id="showListProject" parameterType="Map" resultMap="ProjectMap">
        select p.* from (select p.*, u.name u_name, row_number() over(partition by name order by date desc) line from project p left join users u on u.id = p.userid
        <where>
            <if test="name != null and name != ''">
                and p.name like #{name}
            </if>
            <if test="state != null">
                and p.state = #{state}
            </if>
            <if test="user != null">
                and u.id = #{user.id}
            </if>
            <if test="company != null">
                and u.companyid = #{company.id}
            </if>
        </where>
        ) p where p.line = 1 order by p.id desc
    </select>

    <select id="mapListProject" parameterType="Map" resultMap="ProjectMap">
        select p.*, u.name u_name, avg(m.gridx) x, avg(m.gridy) y from project p
        left join manhole m on m.projectid = p.id
        left join users u on u.id = p.userid
        where m.gridx > 0 and m.gridy > 0
        <if test="company != null">
            and u.companyid = #{company.id}
        </if>
        group by p.id, u.name
    </select>

    <select id="queryListManhole" parameterType="Map" resultMap="ManholeMap">
        select
        m.id m_id,
        m.node m_node,
        m.areacode m_areacode,
        m.surveydate m_surveydate,
        p.id p_id, p.name p_name,
        p.operator p_operator,
        p.datetime1 p_datetime1,
        p.datetime2 p_datetime2
        from manhole m left join project p on p.id = m.projectid left join users u on u.id = p.userid
        <where>
            <if test="name != null and name != ''">
                and m.node like #{name}
            </if>
            <if test="state != null">
                and p.state = #{state}
            </if>
            <if test="user != null">
                and u.id = #{user.id}
            </if>
            <if test="company != null">
                and u.companyid = #{company.id}
            </if>
        </where>
        order by
        p.id desc
    </select>

    <resultMap id="ProjectMap" type="Project">
        <id property="id" column="id"/>
        <result property="x" column="x"/>
        <result property="y" column="y"/>
        <result property="name" column="name"/>
        <result property="operator" column="operator"/>
        <result property="datetime1" column="datetime1"/>
        <result property="datetime2" column="datetime2"/>
        <result property="content" column="content"/>
        <result property="state" column="state"/>
        <result property="path" column="path"/>
        <result property="date" column="date"/>
        <association property="user" javaType="User">
            <id property="id" column="userid"/>
            <result property="name" column="u_name"/>
        </association>
    </resultMap>

    <resultMap id="ManholeMap" type="Manhole">
        <id property="id" column="m_id"/>
        <result property="node" column="m_node"/>
        <result property="areacode" column="m_areacode"/>
        <result property="surveydate" column="m_surveydate"/>
        <association property="project" javaType="Project">
            <id property="id" column="p_id"/>
            <result property="name" column="p_name"/>
            <result property="operator" column="p_operator"/>
            <result property="datetime1" column="p_datetime1"/>
            <result property="datetime2" column="p_datetime2"/>
        </association>
    </resultMap>

</mapper>
 